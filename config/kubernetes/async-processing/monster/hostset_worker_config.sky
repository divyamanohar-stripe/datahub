# DO NOT EDIT: http://go/vendor-skycfg
# This file defines replica sets that correspond to Monster host sets

load("config/kubernetes/async-processing/monster/config.sky",
     "AVAILABILITY_TIER_A100", "AVAILABILITY_TIER_A200", "AVAILABILITY_TIER_A200_LOW_CPU","AVAILABILITY_TIER_A400", "AVAILABILITY_TIER_A400_AUTO")
load("config/kubernetes/async-processing/monster/hostset_worker.sky",
     "cluster", "hostset")
load("config/kubernetes/async-processing/monster/util.sky", "dynamic_replicas")

# Update these maps every time we adjust replica counts or add a new isolation group.
# Run this test to see what values need to be updated:
#
#     ./bazel test --test_output=errors //config/kubernetes/async-processing/monster/test:entrypoint_test
#
# Note: These host counts exclude Shared MSP capacities for now.
# TODO(tonyyang): add ways to compute shared MSP capacitities
#
# Failing test will tell you which host size (ASG) needs to be updated and what to update it to.
# These values are the number of nodes we'll need, computed based on the sum total of pods + some deploy surge margin
# Note that we have 1 pod per node, but need some nodes free to deploy: https://skycfg.corp.stripe.com/rollouts
#
# To rollout: update ASG config in the puppet-config repo, then sc asg sync, and deploy Monster to roll out updated skycfg sizing
#
# Full docs:
# - http://go/monster-pod-scaling to learn about how to scale pod counts safely
# - http://go/monster-hostset-decl for more information about how to maintain this file
#
BOM_TOTAL_SIZE = {
    AVAILABILITY_TIER_A100: 32,
    AVAILABILITY_TIER_A200: 299,
    AVAILABILITY_TIER_A400: 16,
    AVAILABILITY_TIER_A400_AUTO: 6,
    AVAILABILITY_TIER_A200_LOW_CPU: 0,
}

NORTHWEST_TOTAL_SIZE = {
    AVAILABILITY_TIER_A100: 87,
    AVAILABILITY_TIER_A200: 426,
    AVAILABILITY_TIER_A200_LOW_CPU: 430,
    AVAILABILITY_TIER_A400: 227,
    AVAILABILITY_TIER_A400_AUTO: 20,
}

CMH_TOTAL_SIZE = {
    AVAILABILITY_TIER_A100: 30,
    AVAILABILITY_TIER_A200: 216,
    AVAILABILITY_TIER_A200_LOW_CPU: 0,
    AVAILABILITY_TIER_A400: 9,
    AVAILABILITY_TIER_A400_AUTO: 6,
}

QA_CMH_TOTAL_SIZE = {
    AVAILABILITY_TIER_A100: 24,
    AVAILABILITY_TIER_A200: 144,
    AVAILABILITY_TIER_A200_LOW_CPU: 0,
    AVAILABILITY_TIER_A400: 6,
    AVAILABILITY_TIER_A400_AUTO: 6,
}

QA_NORTHWEST_TOTAL_SIZE = {
    AVAILABILITY_TIER_A100: 24,
    AVAILABILITY_TIER_A200: 148,
    AVAILABILITY_TIER_A200_LOW_CPU: 2,
    AVAILABILITY_TIER_A400: 17,
    AVAILABILITY_TIER_A400_AUTO: 0,
}

QA_BOM_TOTAL_SIZE = {
    AVAILABILITY_TIER_A100: 24,
    AVAILABILITY_TIER_A200: 144,
    AVAILABILITY_TIER_A400: 6,
    AVAILABILITY_TIER_A200_LOW_CPU: 0,
    AVAILABILITY_TIER_A400_AUTO: 0,
}
# End of test maps

A100_HOST_SETS = struct(
    availability_tier=AVAILABILITY_TIER_A100,
    hostsets=[
        hostset("high_priority_emails",
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                    "northwest":    cluster(fanout_replicas=4),
                },
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                }),
        hostset("high_priority_webhooks",
                is_canary=True,
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                    "northwest":    cluster(consume_replicas=8,
                                            fanout_replicas=3),
                },
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                }),
        hostset("high_priority_webhooks",
                is_canary=False,
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                    "northwest":    cluster(consume_replicas=29,
                                            fanout_replicas=9),
                    "bom":          cluster(consume_replicas=4),
                },
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                }),
    ]
)

A200_HOST_SETS = struct(
    availability_tier=AVAILABILITY_TIER_A200,
    hostsets=[
        hostset("api-platform",
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                    "northwest":    cluster(consume_replicas=0,
                                            fanout_replicas=8,
                                            mb_per_worker=1950),
                    "bom":          cluster(consume_replicas=12),
                }),
        hostset("billing",
                default=            cluster(mb_per_worker=2500),
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                    "northwest":    cluster(consume_replicas=8),
                }),
        hostset("capital",
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                }),
        hostset("cards-authz",
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                    "northwest":    cluster(consume_replicas=8,
                                            fanout_replicas=3,
                                            config_replicas=3),
                }),
        hostset("clearing",
                default=            cluster(mb_per_worker=2800),
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=6,
                                            config_replicas=3,
                                            fanout_replicas=3,
                                            mb_per_worker=3200),
                    "northwest":    cluster(consume_replicas=25,
                                            fanout_replicas=6,
                                            mb_per_worker=3200),
                    "bom":          cluster(consume_replicas=6),
                }),
        hostset("connect",
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                }),
        hostset("connections",
                default=            cluster(mb_per_worker=2800),
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                    "northwest":    cluster(consume_replicas=5,
                                            fanout_replicas=3,
                                            config_replicas=3),
                    "bom":          cluster(consume_replicas=3,
                                            fanout_replicas=3,
                                            config_replicas=3),
                }),
        hostset("emails",
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2,
                                            mb_per_worker=3100),
                    "northwest":    cluster(consume_replicas=10,
                                            fanout_replicas=4),
                    "bom":          cluster(consume_replicas=6,
                                            mb_per_worker=3100),
                }),
        hostset("frontline_experience",
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                    "northwest":    cluster(consume_replicas=3),
                }),
        hostset("issuing",
                default=            cluster(mb_per_worker=3300),
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                    "northwest":    cluster(consume_replicas=16,
                                            fanout_replicas=8,
                                            config_replicas=3),
                    "bom":          cluster(consume_replicas=4,
                                            fanout_replicas=4,
                                            config_replicas=4),
                }),
        hostset("merchant-fraud-ml",
                default=            cluster(mb_per_worker=2800),
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                    "northwest":    cluster(consume_replicas=20,
                                            fanout_replicas=7,
                                            config_replicas=3),
                    "bom":          cluster(consume_replicas=11),
                }),
        hostset("mobile",
                default=            cluster(mb_per_worker=2500),
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                }),
        hostset("latam",
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                }),
        hostset("model-ingestion",
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                    "northwest":    cluster(consume_replicas=16,
                                            fanout_replicas=15,
                                            config_replicas=3,
                                            mb_per_worker=2600),
                    "bom":          cluster(consume_replicas=4),
                }),
        hostset("payment-flows",
                default=            cluster(mb_per_worker=2600),
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                    "northwest":    cluster(consume_replicas=4,
                                            config_replicas=2,
                                            fanout_replicas=2),
                }),
        hostset("payouts",
                default=            cluster(mb_per_worker=3100),
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2,
                                            mb_per_worker=3700),
                    "northwest":    cluster(consume_replicas=20,
                                            fanout_replicas=3,
                                            config_replicas=3),
                    "bom":          cluster(consume_replicas=5,
                                            fanout_replicas=5,
                                            config_replicas=4,
                                            mb_per_worker=3700),
                }),
        hostset("radar",
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                }),
        hostset("review-platform",
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                }),
        hostset("risk",
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(mb_per_worker=3000,
                                            consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                    "northwest":    cluster(mb_per_worker=2300,
                                            consume_replicas=15,
                                            fanout_replicas=6),
                    "bom":          cluster(mb_per_worker=3000,
                                            consume_replicas=20),
                }),
        hostset("usersec",
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                    "northwest":    cluster(consume_replicas=8,
                                            fanout_replicas=4,
                                            config_replicas=3),
                    "bom":          cluster(consume_replicas=10),
                }),
        hostset("verifications",
                default=            cluster(mb_per_worker=2800),
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                    "northwest":    cluster(consume_replicas=6),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                    "northwest":    cluster(consume_replicas=9,
                                            fanout_replicas=3),
                }),
        hostset("webhooks",
                is_canary=True,
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                    "northwest":    cluster(consume_replicas=0,
                                            mb_per_worker=2300),
                    "bom":          cluster(consume_replicas=3),
                }),
        hostset("webhooks",
                is_canary=False,
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                    "northwest":    cluster(consume_replicas=0,
                                            fanout_replicas=6,
                                            mb_per_worker=2300),
                    "bom":          cluster(consume_replicas=7),
                }),
    ]
)

A200_LOW_CPU_HOST_SETS = struct(
    availability_tier=AVAILABILITY_TIER_A200_LOW_CPU,
    hostsets=[
        hostset("api-platform",
                is_canary=False,
                suffix="low-cpu",
                qa={
                    "cmh":          cluster(consume_replicas=0,
                                            config_replicas=0,
                                            fanout_replicas=0,
                                            mb_per_worker=1950),
                    "northwest":    cluster(consume_replicas=1,
                                            config_replicas=0,
                                            fanout_replicas=0,
                                            mb_per_worker=1950),
                    "bom":          cluster(consume_replicas=0,
                                            config_replicas=0,
                                            fanout_replicas=0,
                                            mb_per_worker=1950),
                },
                prod={
                    "cmh":          cluster(consume_replicas=0,
                                            config_replicas=0,
                                            fanout_replicas=0,
                                            mb_per_worker=1950),
                    "northwest":    cluster(consume_replicas=94,
                                            config_replicas=0,
                                            fanout_replicas=0,
                                            mb_per_worker=2300),
                    "bom":          cluster(consume_replicas=0,
                                            config_replicas=0,
                                            fanout_replicas=0,
                                            mb_per_worker=1950),
                }
        ),
        hostset("webhooks",
                is_canary=True,
                suffix="low-cpu",
                qa={
                    "cmh":          cluster(consume_replicas=0,
                                            config_replicas=0,
                                            fanout_replicas=0,
                                            mb_per_worker=1950),
                    "northwest":    cluster(consume_replicas=0,
                                            config_replicas=0,
                                            fanout_replicas=0,
                                            mb_per_worker=1950),
                    "bom":          cluster(consume_replicas=0,
                                            config_replicas=0,
                                            fanout_replicas=0,
                                            mb_per_worker=1950),
                },
                prod={
                    "cmh":          cluster(consume_replicas=0,
                                            config_replicas=0,
                                            fanout_replicas=0,
                                            mb_per_worker=1950),
                    "northwest":    cluster(consume_replicas=31,
                                            config_replicas=0,
                                            fanout_replicas=0,
                                            mb_per_worker=2300),
                    "bom":          cluster(consume_replicas=0,
                                            config_replicas=0,
                                            fanout_replicas=0,
                                            mb_per_worker=1950),
                }
        ),
        hostset("webhooks",
                is_canary=False,
                suffix="low-cpu",
                qa={
                    "cmh":          cluster(consume_replicas=0,
                                            config_replicas=0,
                                            fanout_replicas=0,
                                            mb_per_worker=1950),
                    "northwest":    cluster(consume_replicas=1,
                                            config_replicas=0,
                                            fanout_replicas=0,
                                            mb_per_worker=2300),
                    "bom":          cluster(consume_replicas=0,
                                            config_replicas=0,
                                            fanout_replicas=0,
                                            mb_per_worker=1950),
                },
                prod={
                    "cmh":          cluster(consume_replicas=0,
                                            config_replicas=0,
                                            fanout_replicas=0,
                                            mb_per_worker=1950),
                    "northwest":    cluster(consume_replicas=201,
                                            config_replicas=0,
                                            fanout_replicas=0,
                                            mb_per_worker=2300),
                    "bom":          cluster(consume_replicas=0,
                                            config_replicas=0,
                                            fanout_replicas=0,
                                            mb_per_worker=1950),
                }
        ),
    ]
)

A400_HOST_SETS = struct(
    availability_tier=AVAILABILITY_TIER_A400,
    hostsets=[
        hostset("general",
                default=            cluster(mb_per_worker=2900),
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                    "northwest":    cluster(consume_replicas=10,
                                            fanout_replicas=5),
                },
                prod={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2,
                                            mb_per_worker=3200),
                    "northwest":    cluster(consume_replicas=125,
                                            fanout_replicas=44,
                                            config_replicas=11),
                    "bom":          cluster(consume_replicas=8),
                }),
    ]
)

# Sigma uses autoscaling.
SIGMA_HOST_SET = struct(
    availability_tier=AVAILABILITY_TIER_A400_AUTO,
    hostsets=[
        hostset("sigma",
                # N.B: the math below for the number of workers is the original sizing;
                # this is a temporary increase in memory to alleviate https://go/ir/desk-subside
                default=            cluster(mb_per_worker=2500,
                                            consume_replicas=dynamic_replicas(2, 4, 2),
                                            fanout_replicas=dynamic_replicas(2, 4, 2),
                                            config_replicas=dynamic_replicas(2, 4, 2)),
                qa={
                    "cmh":          cluster(consume_replicas=0,
                                            config_replicas=0,
                                            fanout_replicas=0),
                },
                prod={
                    "cmh":          cluster(consume_replicas=0,
                                            config_replicas=0,
                                            fanout_replicas=0),
                    # We set the steady state to roughly 1/3 the max
                    "northwest":
                                    cluster(consume_replicas=dynamic_replicas(87, 150, 30),
                                            fanout_replicas=dynamic_replicas(22, 50, 10),
                                            config_replicas=dynamic_replicas(10, 20, 5),
                                            mb_per_worker=2900),
                    "bom":
                    # As part of the cutover for India DL, we expect BOM to see up to 20% of northwest's traffic
                    # Since we use the same spot instance mix in both regions, we can simply size to 20% of northwest
                    # At max, we'll have 50 consumer worker pods (1 per node) x 72 workers/pod = 3,600 workers
                                    cluster(consume_replicas=dynamic_replicas(20, 50, 4),
                                            fanout_replicas=dynamic_replicas(4, 10, 2),
                                            config_replicas=dynamic_replicas(2, 4, 2)),
                }),
    ]
)

TEST_HOST_SET = struct(
    availability_tier=AVAILABILITY_TIER_A400,
    hostsets=[
        hostset("monster-test",
                shared_msp=True,
                prod=               cluster(consume_replicas=0,
                                            fanout_replicas=0,
                                            config_replicas=0),
                qa={
                    "cmh":          cluster(consume_replicas=2,
                                            config_replicas=2,
                                            fanout_replicas=2),
                }),
    ]
)

def get_host_set_map_from_tier(tier):
  return [(hostset.name, struct(hostset=hostset, availability_tier=tier.availability_tier)) for hostset in tier.hostsets]

def get_entries_from_host_set_list(host_set_list):
    entries = []
    for host_set in host_set_list:
        entries.extend(get_host_set_map_from_tier(host_set))
    return entries

def generate_all_host_set_map(entries):
    output = {}
    for entry in entries:
        key, value = entry
        if output.get(key) == None:
            output.update({key: [value]})
        else:
            output.get(key).append(value)
    return output


HOST_SETS_LIST = [
    A100_HOST_SETS,
    A200_HOST_SETS,
    A200_LOW_CPU_HOST_SETS,
    A400_HOST_SETS,
    SIGMA_HOST_SET,
    TEST_HOST_SET
]

ALL_HOST_SETS_ENTRIES = get_entries_from_host_set_list(HOST_SETS_LIST)

# This map allows looking up host set definitions by name: [host_set -> [hostset_structs]]
# If there are multiple "hostset" structs defined for a host set name (e.g. canary), it will include both in a unordered list
ALL_HOST_SETS_MAP = generate_all_host_set_map(ALL_HOST_SETS_ENTRIES)
