# DO NOT EDIT: http://go/vendor-skycfg
"""
For the structure of MetricTarget message please refer to
https://github.com/kubernetes/api/blob/v0.18.6/autoscaling/v2beta2/generated.proto#L325-L345
"""

load("config/kubernetes/helpers/quantities.sky", "count", "gigabytes", "kilo", "megabytes")
load("config/kubernetes/autoscaling/schema.sky", "hpa")

def metric_target(ctx, metric):
    obj_metric_target = hpa.MetricTarget()
    metric = struct(**metric)

    if hasattr(metric, "type"):
        if type(metric.type) == "string":
            obj_metric_target.type = metric.type
        else:
            fail("MetricTarget type field called with non string value")

    if hasattr(metric, "value"):
        if type(metric.value) == "string":
            obj_metric_target.value = get_quantity(metric.value)
            obj_metric_target.type = "Value"
        else:
            fail("MetricTarget value field called with non string value")

    if hasattr(metric, "averageUtilization"):
        if type(metric.averageUtilization) == "int":
            obj_metric_target.averageUtilization = metric.averageUtilization
            obj_metric_target.type = "Utilization"
        else:
            fail("MetricTarget averageUtilization field called with non integer value")

    if hasattr(metric, "averageValue"):
        if type(metric.averageValue) == "string":
            obj_metric_target.averageValue = get_quantity(metric.averageValue)
            obj_metric_target.type = "AverageValue"
        else:
            fail("MetricTarget averageValue field called with non string value")

    return obj_metric_target

def get_quantity(value):
    if type(value) == "int":
        quantity = str(value)
    elif value[-1] == "k":
        quantity = kilo(int(value[:-1]))
    elif value[-2:] == "Mi":
        quantity = megabytes(int(value[:-2]))
    elif value[-2:] == "Gi":
        quantity = gigabytes(int(value[:-2]))
    else:
        quantity = count(int(value))

    return quantity
